// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/paginate_params.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PaginateParams struct {
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The size of resources per page you want. Default value is **15**.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The pagination token received from server in last request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The order of the resources you want.
	OrderBy string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// The filter parameters.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginateParams) Reset()         { *m = PaginateParams{} }
func (m *PaginateParams) String() string { return proto.CompactTextString(m) }
func (*PaginateParams) ProtoMessage()    {}
func (*PaginateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_10ef73e755f5c006, []int{0}
}

func (m *PaginateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginateParams.Unmarshal(m, b)
}
func (m *PaginateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginateParams.Marshal(b, m, deterministic)
}
func (m *PaginateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginateParams.Merge(m, src)
}
func (m *PaginateParams) XXX_Size() int {
	return xxx_messageInfo_PaginateParams.Size(m)
}
func (m *PaginateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginateParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaginateParams proto.InternalMessageInfo

func (m *PaginateParams) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *PaginateParams) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PaginateParams) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *PaginateParams) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *PaginateParams) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func init() {
	proto.RegisterType((*PaginateParams)(nil), "ripper.proto.PaginateParams")
}

func init() { proto.RegisterFile("proto/paginate_params.proto", fileDescriptor_10ef73e755f5c006) }

var fileDescriptor_10ef73e755f5c006 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0xbd, 0x0a, 0xc2, 0x30,
	0x14, 0x85, 0x89, 0xda, 0xbf, 0x20, 0x0e, 0x19, 0x24, 0x52, 0x84, 0xe2, 0xd4, 0x49, 0x07, 0xdf,
	0xa0, 0x4f, 0x50, 0xaa, 0x93, 0x4b, 0x49, 0xf1, 0x5a, 0x82, 0xda, 0x5c, 0x6e, 0xb3, 0xb4, 0x2f,
	0xe2, 0xeb, 0x4a, 0x6f, 0x3b, 0x85, 0xef, 0x9c, 0x2f, 0x9c, 0x2b, 0x53, 0x24, 0xe7, 0xdd, 0x05,
	0x4d, 0x6b, 0x3b, 0xe3, 0xa1, 0x46, 0x43, 0xe6, 0xdb, 0x9f, 0x39, 0x55, 0x5b, 0xb2, 0x88, 0x40,
	0x33, 0x9d, 0x7e, 0x42, 0xee, 0xca, 0xc5, 0x2b, 0x59, 0x53, 0x7b, 0x19, 0xa2, 0x21, 0xe8, 0xbc,
	0x16, 0x99, 0xc8, 0x93, 0x6a, 0x21, 0x95, 0xca, 0x04, 0x4d, 0x0b, 0x75, 0x6f, 0x47, 0xd0, 0xab,
	0x4c, 0xe4, 0x41, 0x15, 0x4f, 0xc1, 0xcd, 0x8e, 0xa0, 0x8e, 0x52, 0x72, 0xe9, 0xdd, 0x1b, 0x3a,
	0xbd, 0xe6, 0x8f, 0xac, 0xdf, 0xa7, 0x40, 0x1d, 0x64, 0xec, 0xe8, 0x09, 0x54, 0x37, 0x83, 0xde,
	0x70, 0x19, 0x31, 0x17, 0xc3, 0x34, 0xf7, 0xb2, 0x1f, 0x0f, 0xa4, 0x83, 0x79, 0x6e, 0xa6, 0x22,
	0x7a, 0x04, 0x7c, 0x62, 0x13, 0xf2, 0x73, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x36, 0x3d,
	0x31, 0xd6, 0x00, 0x00, 0x00,
}
